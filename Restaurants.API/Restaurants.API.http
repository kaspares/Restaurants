// It is simple API client which allows us to test our API, without other programs as postman
// We can send request and see the results

// Using the http file, we'll be able to construct any HTTP request and send it over to our backend

@host = https://localhost
@port = 7075
@Restaurants.API_HostAddress = https://localhost:7075

@token = CfDJ8LkLuJ86w39HqN9J1ni0s_Fb3FPv4JgzN0mSchUudk3lGWCs_cd1xg36UMwaz39XAlC4Kvw70chx8eipPrR5ddUg-qxqTpHK5BLEV6MhKfZhxHXKqrADiWljh8MfqNoepKfneDom6CGZ3Heb3ZwgFHgQI-EQ1QJNabtTLXfiX1KTJWEl6kWT_GGDowA0CIdJOQVNvY2wFSk-33EDXS5N8UNAC8ZR91PmRyF0jlblWAIl_qZObNEOK-UTmSgvRkYRs3zJAW2SeRr4T98CMGrplbtCrL4zcyvrs2oELYw2AnkAuiec_G2mKR_9JF167zG3RJOs1uG5a5pfHQ-YGpcbdaQ9ovuWqDSNV-J93e0Pw-HKFqm1zl9N73fAXMtkD5LcDOGT7z36sMUvrfRVxRDpxJ47DgHj5DIXBmLmG2CGsE1fVHj4Olm9TgO-LRflXY3sMKS3N_U_W-KRTbFqdLnMVPfskYat25owu91Xr-dYyCyRLB1aZ1PVF5N0zEV6ywkcS2n3sumPfs2iGvVCElyFxepw80hDInai9wAH2wmCwW74H0UMtpf1qgDEkenrDBZ2a1kXFJExb2Jy4_CdhM9L85WzXl3FVkG-haJlTQbfnEOhm9KMCkIC11pFLFHVnuawa7PGYChTzRfp9DDLcDKuWZDK7jfhOoCI-eKE_pl66zbe4ZRkYP9eS668pz3NdNNE-B-7GKLA7yB0dlloaiZ6Q5OVdkwzf2BdpeRprYpnJ6-TWklL_dx0EwZBdfcZphZbL_NuzYdPFq699fFl3uf3yrXupMQZH_prYq0wUQLUOHZy
GET {{Restaurants.API_HostAddress}}/weatherforecast/currentDay
Accept: application/json
ProjectUrl: {{$projectUrl}}
Guid: {{$guid}}
LocalDate: {{$datetime iso8601}}
Random-int: {{$randomInt}}

###

POST {{Restaurants.API_HostAddress}}/weatherforecast/
Content-Type: application/json

"Kacper"

###
@count=3
POST {{Restaurants.API_HostAddress}}/weatherforecast/generate?count=3
Content-Type: application/json

{
  "min": 25,
  "max": 23
}

###

GET {{Restaurants.API_HostAddress}}/api/restaurants/

###

@id=123
GET {{Restaurants.API_HostAddress}}/api/restaurants/14
Authorization: Bearer {{token}}
###

POST {{Restaurants.API_HostAddress}}/api/restaurants
Content-Type: application/json
Authorization: Bearer {{token}}
{
  
  
  "Name": "Fajna knajpa",
  "Category": "Indian",
  "PostalCode": "22-222",
  "Description": "Niez³a knajpa",
  "HasDelivery": true,
  "ContactEmail": "stefano@gmail.com",
  "ContactNumber": "123",
  "City": "Sopot",
  "Street": "Bohaterow Monte Cassino"
}

###

POST {{Restaurants.API_HostAddress}}/api/restaurants
Content-Type: application/json

{
  //CreateRestaurantDTO
}

###
DELETE {{Restaurants.API_HostAddress}}/api/restaurants/4
###
PATCH {{Restaurants.API_HostAddress}}/api/restaurants/10
Content-Type: application/json

{
  "Name" : "Przykladowa Nazwa",
  "Description" : "Opis hehe",
  "HasDelivery" : false
}

###

POST {{Restaurants.API_HostAddress}}/api/restaurant/22/dishes
Content-Type: application/json

{
  "Name" : "Hehe",
  "Description" : "XDDD"
}

###

POST {{Restaurants.API_HostAddress}}/api/restaurant/2/dishes
Content-Type: application/json

{

}

###

POST {{Restaurants.API_HostAddress}}/api/restaurant/3223332/dishes
Content-Type: application/json

{

}

###

POST {{Restaurants.API_HostAddress}}/api/restaurant/3/dishes
Content-Type: application/json

{
  "Name" : "Spahertre",
  "Description" : "Classic",
  "Price" : 232,
  "KiloCalories" : 2332
}

###

GET {{Restaurants.API_HostAddress}}/api/restaurant/3/dishes/

###

GET {{Restaurants.API_HostAddress}}/api/restaurant/3/dishes/7

###

@restaurantId=0
@dishId=0
GET {{Restaurants.API_HostAddress}}/api/restaurant/{{restaurantId}}/dishes/{{dishId}}

###

DELETE {{Restaurants.API_HostAddress}}/api/restaurant/3/dishes

###

POST {{Restaurants.API_HostAddress}}/api/identity/register
Content-Type: application/json

  {
    "email" : "owner@test.com",
    "password" : "Password1!"
  }


###
POST {{Restaurants.API_HostAddress}}/api/identity/login
Content-Type: application/json

  {
    "email" : "owner@test.com",
    "password" : "Password1!"
  }

###
PATCH {{Restaurants.API_HostAddress}}/api/identity/user
Content-Type: application/json
Auhtorization: Bearer {{token}}
{
  
}

###

POST {{Restaurants.API_HostAddress}}/api/identity/userRole
Content-Type: application/json
Authorization: Bearer {{token}}
{
  "userEmail": "owner@test.com",
  "roleName": "Owner"
}


###

POST {{Restaurants.API_HostAddress}}/api/identity/userRole
Content-Type: application/json

{
  //AssignUserRoleCommand
}

###
